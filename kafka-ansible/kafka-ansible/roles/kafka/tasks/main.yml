---
- name: Download Kafka binary
  get_url:
    url: "https://downloads.apache.org/kafka/{{ kafka_version }}/kafka_{{ kafka_scala }}-{{ kafka_version }}.tgz"
    dest: "/tmp/kafka_{{ kafka_version }}.tgz"
    mode: "0644"
  register: kafka_dl
  until: kafka_dl is succeeded
  retries: 3
  delay: 10

- name: Extract Kafka
  unarchive:
    src: "/tmp/kafka_{{ kafka_version }}.tgz"
    dest: "{{ install_dir }}/kafka"
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Create kafka data dirs
  file:
    path: "{{ install_dir }}/kafka/data"
    state: directory
    owner: "{{ kafka_user }}"
    mode: "0755"

- name: Generate server.properties
  copy:
    dest: "{{ install_dir }}/kafka/config/server.properties"
    owner: "{{ kafka_user }}"
    mode: "0644"
    content: |
      broker.id={{ groups['kafka_nodes'].index(inventory_hostname) }}
      listeners=PLAINTEXT://0.0.0.0:9092,SSL://0.0.0.0:9093
      advertised.listeners=PLAINTEXT://{{ ansible_host }}:9092,SSL://{{ ansible_host }}:9093
      listeners.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL
      inter.broker.listener.name=SSL
      num.network.threads=3
      num.io.threads=8
      socket.send.buffer.bytes=102400
      socket.receive.buffer.bytes=102400
      socket.request.max.bytes=104857600
      log.dirs={{ install_dir }}/kafka/data
      num.partitions=3
      default.replication.factor=3
      offset.topic.replication.factor=3
      transaction.state.log.replication.factor=3
      zookeeper.connect={% for host in groups['zk_nodes'] %}{{ hostvars[host]['ansible_host'] }}:2181{% if not loop.last %},{% endif %}{% endfor %}
      ssl.keystore.location={{ install_dir }}/certs/{{ inventory_hostname }}.keystore.jks
      ssl.keystore.password=changeit
      ssl.key.password=changeit
      ssl.truststore.location={{ install_dir }}/certs/truststore.jks
      ssl.truststore.password=changeit
      ssl.client.auth=required

- name: Create systemd unit for kafka
  template:
    src: kafka.service.j2
    dest: /etc/systemd/system/kafka.service
    mode: "0644"
  notify: restart kafka

- name: Ensure kafka service enabled and started
  systemd:
    name: kafka
    enabled: yes
    state: started

- name: Create keystore and truststore (simple approach)
  shell: |
    set -e
    cd {{ install_dir }}/certs
    if [ ! -f {{ inventory_hostname }}.keystore.jks ]; then
      keytool -importcert -noprompt -trustcacerts -alias ca -file ca.crt -keystore truststore.jks -storepass changeit
      # create keystore from key+cert
      openssl pkcs12 -export -in {{ inventory_hostname }}.crt -inkey {{ inventory_hostname }}.key -certfile ca.crt -name kafka -passout pass:changeit -out {{ inventory_hostname }}.p12
      keytool -importkeystore -destkeystore {{ inventory_hostname }}.keystore.jks -srckeystore {{ inventory_hostname }}.p12 -srcstoretype PKCS12 -srcstorepass changeit -deststorepass changeit -destkeypass changeit -noprompt
    fi
  args:
    creates: "{{ install_dir }}/certs/{{ inventory_hostname }}.keystore.jks"
